#!/usr/bin/env node

var exec = require('child_process').exec,
    fs = require('fs'),
    path = require('path'),
    optcfg = {
        verbose: Boolean,
        file: String
    },
    opts = require('nopt')(optcfg),
    urls = opts.argv.remain,
    all = 0,
    cmd = require('phantomjs').path + ' ' + path.join(__dirname, '../lib/https-scan.js '),
    resp = {
    },

    die = function (W) {
        W && console.warn(W);
        console.warn('Usage: ' + process.argv[1] + ' [--' + Object.keys(optcfg).join('] [--') + '] [--] <url>...');
        process.exit(1);
    },

    done = function () {
        if (all == urls.length) {
            process.exit();
        }
    };

if (opts.file) {
    try {
        urls = urls.concat(fs.readFileSync(opts.file, 'utf8').split(/[\r\n]+/));
    } catch (e) {
        die(e);
    }
}

opts.argv.remain.length || urls.length || die();

console.log('** All ' + urls.length + ' urls will be tested.');

urls.forEach(function (U) {
    if (resp[U]) {
        resp[U].err.push('Duplicate testing targets!');
        return done();
    }

    resp[U] = {err: [], out: [], good: [], bad: []};

    if (!U.match(/^https/)) {
        resp[U].err.push('Testing on bad url or not https');
        return done();
    }

    exec(cmd + U, function(err, stdout, stderr) {
        var match;

        resp[U].out.push(stdout);

        match = stdout.match(/good:(.+)/g);
        if (match) {
            match.forEach(function(M) {
                resp[U].good.push(M[1]);
            });
        }
        
        match = stdout.match(/BAD :(.+)/g);
        if (match) {
            match.forEach(function(M) {
                resp[U].bad.push(M[1]);
            });
        }

        opts.verbose && console.log(stdout);
        console.log(resp[U]);
    });
});

